Welcome to the Mycelium Network Podcast. A podcast all about early stage web developers
and the mentors and teachers that help them along the way. Today we are going to have a chat with
Riku Smed. He is some of the people that joined the Mycelium Network very early on and has been
pretty active on the community. So I thought it only appropriate to have him as one of the first
guests. Hey Riku, welcome to the podcast. Thanks for having me. It's a pleasure. So I've seen some
of these questions to you before and just so you can be a little bit more prepared but we'll
off the cuff some things here and there. No pressure, it's just an informal chat to just
learn what works, what doesn't work, what's the challenges you're facing and how the mentors that
I speak with can potentially help. So to get us off to a start, tell us a bit about your background.
What did you do up to now and what made you look into getting into software or web development
specifically? Well, since I was born and raised here in Pretoria, my uncle has been very heavy
into technology. So ever since I was little, I remember standing by him, seeing what he's doing
and that intrigued me from a young age. And then throughout high school, I had the opportunity to
take IT and actually discover the love for coding and I had a chance to get all of the fundamentals
down. But as soon as that all ended, I had to basically walk out into a job. I worked in
retail for a hardware shop. I did what I had to to survive, but it's not what I want to do. I always
had this feeling like I want to do something else. The first course I had with you actually,
I actually realized how much I love web development above stuff like app development or
server working or security stuff like that. I actually realized I really love working with all
that. I actually realized I really love working with web, creating pages, designing new things.
I just fall in love with it. That's great. So yeah, I'm looking to study now. At the end of the day,
I would like to be a full stack developer, being able to do everything and anything that is
necessary. That's good too. I think it's good to have that as a goal. But what I do find is like
they talk about being T-shaped in terms of your skills. So you have a broad knowledge base,
but then you have something that you focus in. For myself personally, I do know about back end
development and I've done stuff and I keep doing stuff in that region like Python a little bit.
And even databases still like the old relational kind of stuff. I say old, but people definitely
still use traditional databases today. But I definitely have the T of my T-shape is definitely
focused on front end development and like, as they say, front of the front. So I like the design
aspects and I like the CSS and making things look good and work well and performance accessibility.
Those things are really important to me. So I think it's good to have that broader perspective
of what happens in the industry, but it's always nice to have something that's more your focus area.
You really go deep as they say. So you have this breadth and then you have depth in a certain area.
But that's great. Yeah. I know for myself also, I also got into web development from
a music background. For me, the nice thing about web in the early days with Flash and that was
still around was that it had this thing where I could take the musical aspect and the design
aspect and take a little bit of programming and mix them all in. Because we used to make these
Flash intros, which are like little movies that used to play before you'd actually go into the
website. We had a little movie with text and animation and whatnot, and then it would say,
click to enter. That used to be a huge thing back in the day. So I understand starting something
and then being bitten by this web thing and really digging into it. So is there something you wanted
to expand on? I must say I'm more interested in the front end side of things. It feels like I
would like to know the back end part to make things simpler if you do get stuck. But I must
definitely say I'm more interested in front end development. I don't really find PHP interesting.
I hate SQL. We had to do some in high school. I absolutely hate it. Yeah. No, it's a journey.
It is for sure. So now we know you about your background and how you came to where you are
and what you're looking to do for your future. Like you mentioned, one of the main things you
need to do is learn. So as you're learning, which resources have you really come to depend on?
I've got three, actually four now. I really like the input I usually get from you.
If we get together, I have a chat about things that's going on and places to find things to
help the development further. VS Code has gotten very essential for me. It is, I try it, sublime
text. It is very bare-boned and feels like amazing if you have a laptop and traveling around
and you have a moment to quickly open up and edit something. It's also very, very,
it's a lot smaller than VS Code. So it's easier for me to carry around on a flash drive.
So having Git actually is amazing. Just using GitHub in general, because where I am,
I would be able to download my current project. I'd be able to open it in sublime and work on it.
But when I'm home, I prefer to use GitHub to download my updates and everything
and then work through VS Code. And funny enough, YouTube is very essential to me.
I struggle to sit and read through a document of pages and pages. I just can't. So for me,
I like YouTube, someone telling you do this, this and this, and then they type it out.
So you can actually pause and go and do it yourself and then rinse and repeat until you
get the hang of whatever you're doing. Yeah, yeah, yeah. Yeah, no, I agree. There's
definitely different modalities that work better for some people. That is why with the 150 days
of HTML thingy that I'm putting together, I have incorporated video into the pages now so that if
you're more of a video person, you can listen to me talk through the content, but you have the
content just below you as a reference. I think that for me is something that I have understood
more and more is giving people different ways to consume the same content because not everybody
learns the same way. Is there anybody specifically on YouTube that you want to give a shout out to
that you find is particularly good? Now you're asking me a question half. I do know his name.
I just want to retrieve it. If I remember correctly, it's Mosh and he has a lot of coding
tutorials online. His entire teaching style, the way he talks, explains, all of the little
graphs and things he uses is amazing. I just really like learning this from this guy in particular.
I'm trying to just get his name right now. If I remember correctly, it's Mosh.
Sounds familiar. I think you've mentioned him to me as well.
The one big problem I'm actually running into as a new developer is finding the information I need.
Yeah. Yeah. So more often than not, I'd find myself asking what's next. I don't know what to learn
from here on out. Unfortunately, I do rely on free resources at the moment
because currently it's running from paycheck to paycheck. So I simply do not have the means to
pay for courses quite yet, especially the online stuff gets really expensive really quickly.
Yes, that's true.
There we go. I found his name, Mosh Hamadani.
All right. Cool. We should link him up in the
send me the link afterwards and I'll put it in the show notes. And I'll probably reach out to him
and see if I can do an interview with him on the podcast. Yeah, no, all of those things are very
true. And I think what's kind of nice is something that's starting to get a little more traction is
the idea of purchasing power parity pricing. It's always a hard one to say with the idea being that
depending on where you live, they will geofence the content, but you will pay a smaller and lower
amount based on where you live. Somebody that's really great with this is somebody like Ken C.
Dodds. He's got all those courses about react and testing and all that kind of stuff. And if I,
living in South Africa, purchase one of these courses, I get a 60% discount on that. So that's
like a purchase is one of these courses. I get a 60% discount immediately just because of purchase
parity pricing. So I think that's something that the industry as a whole should consider more
widely because then they can make it because I understand why people ask money for courses.
It's a heck of a lot of work. And if you want to do it well, it's especially a lot of work. And
for some people, this is how they make a living. But it is tough when you come from a third world
country or you're just starting out and you're still finding your feet and you don't have a bunch
of money to invest yet. It is hard. There's all kinds of other interesting things developing
around that idea as well. There's some academies and stuff in the United States exploring a different
way of paying for your courses. But that is definitely, I think the thing that I get from you is that
one big thing that's missing is a roadmap that you can look at, which points you at specific
learning material based on where you are along your path and also which path you're on. Are you
on a backend path? Are you on a full stack path or you're more on a front end path? Because you'll
have different milestones and different learning material needs there. So I think that is something
that we should look into, see if there are some resources to help there. Yeah, no, definitely.
Because being in the front end developer, I've been working, learning, and then I reach a point
and I just look at everything online. What now? Do I just invest my time into CSS? Do I just continue
HTML, Java? What next? What do I need to do? What do I need to find? So I end up spending two to three
hours searching for stuff to learn, running out of steam, learning for an hour or two, and then
continuing with my day. Rather than having to go somewhere and spend those hours more, an hour
finding this and this and this is what I need. And then two to three hours of learning whatever
needs to come next. Yeah. I think communities such as the Mycelium Network can also help there,
especially if we can get some more mentors to join our Discord server. And then where we're
talking about the idea of having some meetups virtually and in person where possible. I think
that'll help because there you can pose these kinds of questions and talk with other people.
And often, more often than not, somebody else is being where you are and they can say,
oh, I actually found this thing and it can kind of help you on your way. So I think
investing in community and joining in on these communities and being active I think is one of
the ways we can start solving this roadmap problem. But we have to get people from
data learning and people who are teaching in the same place. A nice mix of two. So you don't have
too many mentors and too little. So yeah, definitely. And it's quite a shy guy. It's
very difficult for me to enter the community. I don't know why I've always had this thing about
online communities. Even during my leisurely hours when I have gaming and stuff, I would not
communicate with both people on the server. I just find it strange, you can say. So that was quite
different for me. But what I found is you just jump in, find one thing you like, just drop a
comment and see what happens. Because after that first comment, you find it's actually not that
intimidating or scary. You can just go. Yeah, that's very true. And a lot of that comes down
to also the people running the community. If you are focused and you start off with good
community guidelines and you clearly enforce them, it helps a lot. Because there are
bundles out there that just want to come and sour the pot. But as long as there's people that
have their finger on the pulse and can quickly pick that up and make sure that those people are
either kicked or reprimanded in a way that they understand that that kind of behavior is not
welcome and their continued participation is going to hinge very heavily on them changing their
attitude. I think that is important. And it's something that unfortunately has been a little
rough on the internet, to put it mildly. Places got very toxic very quickly. And for me and you,
it might be a little bit easier than for some genders and people of different races and
ethnicities. For them, it's even harder to really feel comfortable in these groups. So big challenges
that we have, but as long as we acknowledge them, then at least we're in the right direction.
I think you've touched on a lot of the stuff from the next question I had in mind,
but I'm going to pose it anyway, just in case there's anything else. So having talked about
all of these resources and stuff. So clearly there's a bunch of things that don't work,
but there are things that work. But if there's anything else that you feel on that doesn't work
so great side that you want to highlight. The work that not works so great is a bit difficult.
It does not work so great. The only thing I'm personally really stuck on is feeling lost.
You're this drop that falls into an ocean, just kind of told swim. You don't know where you're
going. You don't know which way. You don't know if you should swim down or up or what's going on.
That's the only thing that's really missing for me. But that said, I do have you as a mentor as well.
So I don't feel that lost. If I get stuck, you can meet up and just say,
hey, listen, this is going on. How can we resolve this?
How can we resolve this? That's the important thing to have
and to nurture is this whole mental relationship. Because I do think that there's a lot of value
there that I think a lot of people miss. Yeah, that's what I'm about to say. That's
definitely something that's missing is finding someone you can ask a question to.
To just ask, how do you had a heading in HTML? And not him having you laugh at you and just saying,
oh, okay, let's help you. This is how we do it. This is why we do it. But I did not feel that
personally, because I did start my journey with you. So I had that from the get go, but I can
really see that being missing in a lot of people's startup, you can often have same.
Yeah, for sure. That's true. I've been there also. And I know that I actually searched widely to try
and find, is there any networks or mentorship programs or anything like that, that you can join?
And there are some now, to be honest, that I should probably mention. I'll put some of the
links to some of them in the show notes. Some stuff like Outreachy is really, really great.
And they also focus on being very intrusive. Outreachy does some amazing work. And there are
some other mentorship programs as well. But unfortunately, some of the mentorship things
again, comes with a cost, which is understandable. But again, if you're not in a position to be able
to pay, it is just another roadblock you have to face. And even though, you know, it's not
easy, even though web development specifically, that's what I can talk to mostly, I've come a
heck of a long way since the day was when I started. And a lot of things that used to be
super hard are now trivially simple. It's still not easy. There's still a lot of questions that
one has. So, you know, the need for that still exists very much.
No, it definitely does. As for the roadblock of the payment is, I have looked into teaching myself,
IT in general. So startup courses for old people or women, especially in my area, don't really know
how computers work. That was a big thing for me. A lot of female older women don't know in the area.
So I was looking to make something for them to teach them how computers work. And I completely
understand why you charge so much for a course. It's a lot of hard work. It's a lot of information
gathering and this and that. And you need to remember this. And even once I was ready to
start, I still felt like I still have to go through a couple of things and make sure.
I can totally understand why, but not having the funds necessarily available to
you by let's say $60 for advanced courses will help you. It's quite a hindrance because now I
have to go search. How can I get this information for free? Yeah. No, for sure. I completely get
that. And the other thing with courses, of course, is that you have to, especially if you're asking
money, is you have to keep it up to date. It's not something you make and then forget about because
the tech industry evolves and moves quite fast. So that's the other part is if you want to keep it,
if you want it to be useful, you have to keep it up to date.
That is something as well, because I was following books from Microsoft. I was lucky enough to get
access to those books and they fell into that trap. I would learn and learn and learn and learn it
to some point and I'll hit a roadblock. It's been, what's this? It's not working. What's going on?
And I have to go search for hours and hours and hours just to find out this phrase is no longer
valid. Simply change X to Y and it works. Yeah. So that is definitely a pitfall. I can see some
people falling into not keeping everything up to date. And it is frustrating for us who's new at
learning these things because now where you would know this or know where to look for it, I need to
spend two or three hours trying to find out why it's not working. What's going on? What's this error?
Yeah. Yeah, for sure. But teeing off the thing where you said you were looking at creating some
courses to teach people other skills that you already have, I think in general, that is a good
idea. And that's something that a lot of people knew to development. This doesn't matter what
industry it is, are a little bit scared of, but that I would personally encourage is to write about
the stuff that you learn because teaching is one of the best ways of learning. So if you've
built something, anything, like write about how you made it. It doesn't necessarily have to tell
a story per se about the struggles you had. It can literally just be you writing down how to make a
responsive euro with HTML and CSS. Because by doing that, you are thinking through the process
of having done that. Oftentimes you find ways that you can do it even better than what you've
already done it. So you automatically improve your existing code base. And at the end of the day,
you have a piece of writing that can also be useful for whether you start a business or whether
you're looking for employment. You have something to point people to, to say, not only did I make
this thing, but I wrote about how I did it. Because there's not a lot of people that can do
both of those things. A lot of people are really good at writing the software, but they're not so
great at teaching it. And more often than not, it's not that they don't have the skills. They
just never exercise that skill. So as they exercise their coding skills, they don't exercise
writing about their coding. And so that kind of never develops. So you have this amazing
software engineer, but if he tries to explain something to you, it's like right over your head,
because they'd never go back and think about how did I, what did I do before I knew how to do this?
How did I get to that point? What was the things that I, what were the things I did wrong? And how
did I find a better way and stuff like that. So I think while you're learning writing about the stuff
that you make is incredibly important. You just gave me a great idea to maybe branch off of my
existing URL to start something to score RWS journey. Just a place we can write. I made a
navigation bar today by using this, this, and this. I hit this roadblock, but I found this information
there. So if someone does read it, they can say, that's my problem. So I can just go look over there
to go fix it. Because something I hit a hard roadblock with is including JSON. So I can just
add JSON into my project. So everyone was just like, no, just add it, just install it, just do it.
Like, yeah, how, how do I do this? And after like two or three hours, I was like, oh, I just make a
text file, change the name and paste the stuff in and include it into my job and bam, Bob's your uncle.
Then again, just that little bit of knowledge I couldn't find for about two to three hours,
because everyone just explains how to use it, not how to implement it. Gotcha. And it's literally
because people just don't think that far back anymore. For them using JSON is just a thing you
do. Like it's just text. What are you talking about? But it's like, no, but if you don't know,
if you don't know what JSON is and how it fits into the larger framework of building a,
let's take for example, the one tool that I built developer tool chest. All that is in the end of
the day is a website that loads some JSON that has a specific structure and it loops through them.
And for each entry, it makes little block based on the search filter that you typed in. But if you
don't know how JSON fits into that whole thing, it can be like, wait, what is this JSON now? Is it a
database? It's like kind of, not really. So it's understanding that no, JSON is just a flight text
file that has certain limitations placed upon it. And JSON in the end is data. So this is like the
data part of your project. You describe data inside your JSON document and then you can consume
it as if it's like a database, kind of. Just a very, very loose database. I don't know if you've
ever looked up SQLite, but if you haven't, it doesn't matter. Just maybe after the podcast,
just have a search for SQLite. And SQLite is essentially just a flat text file on your hard
drive that acts as a database. But you can query the data as if it's SQL. That's why SQLite. And
like it's in everything. It's in everything. Like your mobile phone, your everything. It's
everywhere. SQLite is like everywhere. Okay. I already opened a tab of VF after we're done. So
that's one of those great reads. And that also reminded me, that's something I see a lot of
mentors fall, I want to say fall short, but I don't know if that's the right word. That's why
I like following Mosh. He says, use an H1 tag to add a title. And a lot of people just move on.
But for me personally, I want to know why. What does it do? How does it work? And what he does
is he pulls up the graph and tells you, H1 does this. It adds a title. It does this. This is how
you use it. This is how you can use it. So that is something I've been struggling with as well.
Because I've been following someone doing a text adventure game, because that was interesting to
me. This guy would just type, no, use this, this, this, enter, and go to the next thing. I'm like,
wait, why? Why did you do this? How does this work? You didn't explain to me anything. You just wrote
code on a little pad and moved on. So you didn't actually teach me anything. You just showed me
what you can do. Yeah. Yeah. Yeah. And I guess there's a place for that. But I think more often
than not, you find that a lot on Twitch, like a lot of people on Twitch would stream them working.
And the idea is not to, you might pick up some stuff by watching, but that's not their intent.
Their intent is just like, I'm doing some stuff and maybe I want to be held accountable. And
therefore I will stream every day between five and seven, and I'll work on this specific project.
It's more a way of keeping themselves accountable. And if somebody learned something out of it,
then great, but that's not the intent. But yeah, that's, that's all good stuff. So I'm wondering,
so looking towards the future, Sam, I'm going to, I'm going to, it was two separate questions,
but I think I'm going to throw it into one question. Okay. So you can do one or two things.
Like you can learn and learn and learn and eventually apply for a job and work for somebody
else. Or you can do the other thing, which is create your own opportunity by starting your own
business, whether that is building a product or starting an agency where you create websites and
design for other people. But I think in both of those areas, it doesn't really matter which one
you choose. This idea of an interview is part of both. The difference being on the one hand,
you're interviewing for a specific position at a specific company. The other one you're being
interviewed by a client who wants to know that if I give you money, I'll get a website and return.
So therefore I need to, you know, I'm just not blindly going to give you money. I want to speak
to you a little bit. And it's also a kind of an interview. So my question is, which one of the two
is of most interest to you, like starting a business or working for somebody. And based on
that, what is the things about these interviews that perhaps scare you a little bit? Okay.
Personally, I'd like to start my own business. I walked out of high school into my permanent job
working for about three years as a retail salesperson. And after that, I got the
opportunity for better hours, more pay doing school photos. So I've been working for a while
now. So I've been working there for three years now as well. So I've been basically working
since I got out of high school and I've reached a point where I've had enough of making someone
else rich. I've got a lot of knowledge. I've got a lot of experience with a lot of things.
I do feel like I want to start my own thing and I want to get away from working for someone else.
I want to start my own business. I'm starting my own thing, which I already have started.
I'm still looking for clients now. I've got one client pending. We still need to do this
interview you're talking about. But having about three years worth of sales experience,
the interviews are a fun part for me. I look forward to it and it's exciting.
I can definitely see the scary bits of it, having to explain to someone why to use you.
But what I always found in sales is if you use the term faker to make it, you can sell a pen
to a pen factory. If you stand there with a smile and they ask you, can you do back-end
developments and do this whole database thing? And tell them, yeah, sure. I do have to do some
research. I do need to freshen up on a couple of things, but let's talk. Let's see what you can do.
And I'll tell you yes or no, I can or cannot assist you. Then a client's more likely to use you,
if you're honest about things like that. Because they don't feel you're trying to
scam them out of money. They do feel like, okay, yeah, I do know what I'm doing. I just need to
sharpen up. So then already feel like, oh, okay. So you're not just someone looking for a quick
buck. You're actually interested in the work. Yeah, honesty goes a long way in business.
That's for sure. And I mean, I say that knowing full well that the business industry can be a
bit of a cutthroat industry as well. But I think you have to have morals for yourself and for your
business. And like me personally, for me as well, I have very fine lines of the type of clients I'd
be willing to work with and ones I wouldn't be willing to work with. And I think there I
shield myself a little bit from this cutthroat, like it's all about the money kind of thing.
Yeah, I think it's great. I think it's great to be honest and open that, sure, I can do this.
This specific part of the project might be a little bit more challenging, but
you know, I have enough experience in how to find answers. That's what I do is I find solutions to
problem. The technology is almost kind of the easy part. Mentally finding a solution is
lots of times harder than actually writing the code. It's understanding what is the problem
that the client's facing. How do I best solve this? And then what technology do I need to employ in
order to solve this? Because oftentimes people will come to you with a preconceived idea in their
head, because they've heard it from a friend, but it might not necessarily be the best solution for
them. There might be something better that's come along since they've framed it their thing.
Their friend might actually also benefit from your services. And because they might not know
that there's a better way to do this now, that could actually save them money or, you know,
help them grow their business faster. I'm always excited when I hear people wanting to start their
own businesses, because if we look at unemployment in the world, the need for jobs is massive. And
it is for each of us that starts our own little business and start networking with each other.
We're creating opportunities for ourselves, but down the line, we're creating opportunities for
others. And the nice thing about somebody like yourself, for example, sorting a business is,
you know, the pain of having to learn this stuff and having to find a job where people say,
oh, how much experience do you have? While working experience, not yet, but I've done all these.
Oh, no, no, no, we're looking for something five years experience, sorry. So you'll be more open
to listening to somebody and giving them a chance and telling them, you know what, come work. I'll
pay you a full salary for a month and let's see how it goes. If by the end of the month,
I can see that you could do the job, well, let's just keep going. But if I find that after a month
that you can even struggle, but if you're willing to learn and you're willing to do what's necessary
to get the work done, I'm happy to employ you. I think the more that we can get that kind of
thing going, the better. Yeah. And that sense that is something I find very difficult. I've been on
a lot of platforms like Upwork and so on, looking for jobs and I find stuff and I look at them like,
I can do this. I can do everything you need. I have all the requirements. I've got the technology.
I've got the background. I've got an internet connection. I've got all of this. The only thing
I'm lacking is the three years of experience I must have you're looking for. Yeah. And finding
that one person that says, Hey, listen, this is your opportunity. Just try, let's see what you can
do. That's all you need. That's all you need. That one guy that just says, I'm willing to give you
a month's worth of work. Let's see what you're doing. How are you doing? How are you handling
this? On a little bit of a side tangent, the interview, just circling back to the interviews,
I do have some advice for people. I turn it around. If I have a client comes to me, they can just find
my wording. I am interviewing them. I get them to tell me what they need. I get to tell them what
they get them to tell me what they are looking for, what they are looking to do. So they'll come to
me on three pages. I want this done. I want that done. I want this there. They'll be like, okay,
they'll be like, okay, well, this I can do for you. This I can do for you. It's very difficult. It
takes long. So you are going to be charged more for this because instead of just a quick, quick
hours with the work, this can take me about three or four hours, but I can do it another way for you.
So instead of sitting there and wondering, like, I'm, I'm being interviewed. I turn it around.
I ask them, what are you looking for? What do you want? What do you want out of this website?
Because obviously I can say whatever I want. And I might just go off in a site engine for an hour,
just speaking about myself and what I did, not answering any questions. Where if I tell the
client, what's your question? Then I answer, what's your next question? And I answer. And you ask a
question, I say something like, wait a second, this is not how it works. We can't do it this way.
We can do it this way, this way, or this way. Clients love having options. Yeah. So it's,
you pretty much flipped the interview around and you're interviewing them now. Because at the end
of the day, you do need to know from them what you need to do. Oh, yes. And having that person just
ask you the entire time, what do you want? What are you looking for? Yes, I can do this for you.
No, I cannot do this for you. Feels a lot easier than I sell websites. I make websites, go look
over there. I can make a navigation bar. I can. Then you change it all from me, me, me to them.
And you change the focus point around on them. And I feel very special if I can state it like that.
Yeah, no, for sure. No, that's great advice. Yeah. Thanks for sharing that.
This was really cool. I really enjoyed this. I'm looking forward to seeing where you go and
what you do with your business. So before we officially wrap it up, is there any projects
you're currently working on that you like to tell everybody about? This can be open source,
can be side projects, doesn't matter, client projects that you can talk about, or any like
links that you'd like people to know about. And of course, we'll have them all also in the
show notes. But if you want to give some specific shout outs, then go for it.
Not quite at the moment. I do have a client outstanding that is going, everything points
are going to use me to create their website. They do work with aluminum and door frames and
they install them for different houses all around our area here in Pretoria. So I will
love to share that journey. Like you said, I would love to make a blog for a journey
of how I will create that. But as of now, I still need all the information. So I haven't started
yet, but I have started planning. I have started looking at designs and color schemes and stuff
like that. The only current project I do have is my own website, which is rwswebdesign.co.za.
It is currently live. I have been communicating with our community, improving some stuff,
changing grammar, updating some of my graphics. And I do keep it up to date because this will be
my private business website from year on. That's great. Can you just repeat that URL for us?
That's rwswebdesign.co.za. Okay. rwswebdesign.co.za. Go check it out, folks.
So other than that, the side projects I don't really have at the moment,
I would like to give a shout out to FreeCodeCamp.org. You actually gave me this site a bit
earlier this week, I think. It's an amazing platform so far for me to learn. They do start
from the very basics, which is a bit annoying. They got about four or five exercises in, and
they've already taught me something new of the basics. I didn't know. So far, it feels like an
amazing tutorial, especially for beginners to start at because they start simple, easy to understand.
They've got documentation, all of that good things.
Yeah. And the great thing about FreeCodeCamp is, well, it's free, but
beyond that, it's built by a community of contributors. So one, it's kept up to date,
constantly being improved. And you yourself, like Riku, that's learning, you can contribute back to
that project, even if it's just a small thing where you maybe find the wording of something not
as understandable as you'd like to be. It's an open source project. You can fork it, open a pull
request and propose something that you feel would improve it. So I think it's really great to be
involved with projects like that. And as one of the other ones that I'll give a shout out to,
because I'm quite involved with them, that is in the same vein. It's an open source project. All
the content is right there. It's community written. There are some people paid to work on it, but it's
a massive open source project. So I think being involved in these projects is great. And there's
a lot of wonderful people behind these projects that would be happy to receive pull requests. So
I can personally send an invitation to everybody listening to both go check out FreeCodeCamp and
MDN Web Docs on GitHub and on the web and learn, contribute. It's all good. It's all learning
experience. So yeah, thanks for sharing that. Yeah. So yeah, no, there is something I would like to
go back and actually donate to FreeCodeCamp, not if, when my business takes off. When I become
a success, I would love to go back and actually donate to them. And that is something I am very
appreciative of them. They don't cap their learning based on paygates. You are busy working and it
pops up like, Hey, listen, would you like to donate? I just look ashamed. Like, no, not now.
Maybe, maybe once my first site takes off and I've made my first sale, I'll come back and I'll
come donate something. I've totally done that. I've totally done that with a couple of open
source things where it's been just like, I wouldn't be where I am without it. And so now
that I am where I am, I totally just go and do a monthly, like set up a monthly donation
because I want it to be around for the next generation and I want it to keep improving.
So yeah, I think that's great that you're also already preparing yourself for doing that.
It's great stuff. Well, thanks Rico. It was really great. Thanks for being the first guest
on the My CD and Metro podcast. I hope this is going to be one of many, many, many, and
we'll do one again once, once your business is huge and you've got like hundreds of employees.
That's been great. Thank you for having me. It's been quite an experience. Always nice to
sit and speak to someone about these kinds of things. Yeah. Not just sitting in your own mind,
just thinking about all of this stuff and just feeling stuck. So I would actually recommend it
for shy people as well. Get a community, join a community and just start speaking with people.
It really lightens the load if you say it like that. Yeah, it's been quite a pleasure.
Same for me. Thank you for listening to this episode of the My CD and Metro podcast.
If you're not already, please subscribe, store, and leave a review for us in your
podcatcher of choice. This helps others find us and helps us make a better podcast for you. You
can also find and follow us on Twitter at networkmycindium and join the community on
Discord. All the links are available in the show notes.
