Welcome to the Marseillean Network Podcast, a podcast all about early stage web developers
and the mentors and teachers that help them along the way.
Hey, Skulk.
Thanks for joining me today.
It's kind of strange because I'm Skulk too.
How are you today?
All right.
A bit rough, to be honest.
So my 10 month old daughter decided that it's the ideal time to start the teething process
in the middle of us moving houses.
So apart from me sitting between boxes and furniture here, I think I have about a half
an hour sleep in.
Yeah.
But it comes with the territory.
That's true.
That's true.
I've not had the best sleep in the last while as well for different reasons.
We've had a bit of the COVID on everybody in our house.
Yikes.
It's kind of still recuperating and it seems like my wife got it for a second turn, so
that's fine.
Yeah.
I've had it twice as well, so I can sympathize.
Yeah, for sure.
It's not something you want.
That's for sure.
So we know each other from random interactions related to CodeBridge and the Zatech Slack
and some open source hack days and stuff like that.
I've read up a bit about you on your website and stuff on the open up page.
There's some things on the open up page that I found really interesting that I want us
to dig in a little bit.
But before we do that, if you could just give us a whirlwind introduction to your background,
how you got to be on today.
Okay.
So introduction from my side.
Oh, I don't know.
I think for me, I always start with the...
I think it's important in terms of context for me, just in terms of my own journey and
so forth, is that I don't have a formal background in tech.
I like many other people my age that are in tech and specifically at the specific intersections
where I am, didn't actually study this.
We kind of ended up here by accident.
I think that's also maybe one of the reasons why I also find myself in the spaces that
I do because I think for me, tech and things around the tech industry and so forth have
always been things that I've made sense of through conversation instead of actually studying
it.
I think I've been very a part of communities and meetup and so forth in the early days
in terms of just actually figuring out how to build websites and whatever.
And I think once I actually, I guess, hit a point where I could maybe call myself a
professional in this space, I think I just didn't stop joining meetups and stuff.
I just kept on going and I think I'm still part of a lot of those communities today.
Yeah.
I mean, you're behind FedSA, Zatech, ZAProductDesign and CodeBridge.
That's a lot.
I don't know if it's going to make it any better, but at the moment I'm not actively
involved in CodeBridge, so at least I have that going for me.
So it's down to like three at the very least, but yeah, obviously I was very involved there
for a long time.
I kind of ran it as well.
I obviously know a lot of the people there, but just because where life takes one and
so forth and I'm currently quite a way away in terms of distance from like actual CodeBridge
itself, the venues, and with the current petrol prices and stuff, yeah, it's a bit of a tough
one.
So I'm not actively involved there at the moment, but yeah, obviously kind of still
pop in every now and then, yeah.
Would you mind explaining a little bit about what exactly CodeBridge is?
Phew.
Okay.
I think that is something we've been trying to answer for a very long time.
So I can speak to obviously like kind of my experience when I was kind of like actively
managing it and so forth, but I obviously don't want to speak on behalf of JD and the
rest of the team who kind of are running it at the moment.
But I think when I was there, it originally started out, so I think between me and JD,
we definitely had a very big interest in what you would, I guess, call civic technology.
So effectively the intersection between technology and kind of civil engagement and social good
and NPOs and civil society and so forth, because I think we were quite frustrated in terms
of just, I think the ventures that we saw where you had civil society or nonprofits
or so forth, where they kind of ventured into the world of tech and tried exploring solutions
within the world of tech.
I think in terms of just the outcomes that we just saw, it was very, I think, demoralizing.
So I think we wanted to create a space where we could have those discussions in terms of
like, how can you actually leverage technology for social good, because everyone comes to
the discussion in terms of, okay, we're going to use blockchain and AI to solve world hunger.
But I think if you've spent any time within the space, you'll just know that is not only
pretty much unachievable, but it's also like, even if you were to solve social problems
or have some type of social good without it actually being connected to something happening
in the real world, it's pretty much not of value to anyone.
I think we had a saying where we used to say that tech, a lot of times tech isn't the solution,
but it shouldn't be the problem.
And I think that is what we saw a lot of times is people started with like the tech, they
took tech as a kind of a given, and then they try to work their way backwards and figure
out how can they employ this for some type of social good instead of starting at the
actual need and then deciding on the tech that you employ and so forth based on that.
But yeah, so honestly, it's a very hard question to answer because I think it just came from
a place of being dissatisfied with kind of how tech was being leveraged in the space
of civil society and social good and so forth.
And just being tired of seeing nonprofits pay thousands of rands for a basic WordPress
website that falls over within a month.
So I think it was just a general open space to explore those intersections.
But I think at some point, it started growing into developing other facets as well.
So just like general mentoring and people just connecting on tech projects and so forth.
So I think some of that specific focus, I think started getting diluted at a later point,
which isn't necessarily a bad thing, because at the end of the day, I think the goal was
to keep it an inclusive space.
So demanding that we kind of all work towards a specific mission that we dictate was kind
of a bit against the founding principles.
So yeah, it's to this day, still a very hard question to answer.
No, I totally get that.
I ran a, well, I tried to run a similar kind of program called Third World Problems.
I had the idea initially was also to employ tech to solve world problems.
But I quickly realized, especially as soon as I started doing some research, I realized
exactly what you said is you first need to understand the problems and then you need
to decide whether tech is the right thing to solve that problem.
And that was actually, as is often the case, the hardest part was clearly identifying a
need that was really, that is kind of why the project fizzled out.
Unfortunately, I'm trying to resurrect it again.
But the reason it fizzled out is because people that would be interested in it would be interested
in the code, you know, making an app that can do something.
And that's great.
That enthusiasm, I mean, you need those people.
But before you do that, you need to understand the concrete problem and what the people on
the ground really need.
Do they need technology or do they need bread?
You know, like it's fine to have an app, but if you're hungry, the app's not going to help
you unless it's going to help you know how to grow your own food and how as a community
becomes self-sustainable.
And the app or the technology helps you achieve that.
Great.
But the technology is not the key part of that, of that part.
And that's why I think that's why that project kind of fizzled out because again, it's this
why does Third World Problems, hard to say.
It's about Third World Problems, but the real Third World Problems, not the jokingly stuff
that people say like, oh, First World Problems, you know, not in that joking sense of that,
like the true Third World Problems that people face in the real world.
And I think that kind of leads to a quote, I think from you that is on the open up website,
where you made three points and they are attempting to make sense of the bigger South African
socio-economic picture, cultivating very practices that interrogate my own position and understanding
how the latter should stand in relation to the former.
I really love that and I'd like it if you can unpack that a little bit.
Oh, sure.
Like, I wrote that a long time ago.
Having someone else read it back to me, you're not going to lie, it sounds pretentious.
But yeah, let's work with it.
Yeah, so I think it's also just like in terms of just due diligence and so forth.
I think it's important for me to just also note that, you know, I'm not a full-time employee
of open up at this point anymore.
I do contract work, I mostly do full-time freelance work.
But yeah, like I think that the time I spent at open up was a very formative time in my
kind of life.
And I think it very much formed a lot of the ideas that I have and how I kind of see myself
as someone in the field of tech.
Cool.
So sure, like in terms of that, yeah, like it's like if I were to kind of relate my like
where I'm today, I think like back when I joined the open up team, that was very much
something that I, you know, like I spent a lot of time thinking about.
I think for me, as mentioned, I don't necessarily have a tech, a formal tech background.
I would say that I'm self-taught, but with two caveats, the key being that everyone kind
of working at this within like in the web space in 2022 at my age are self-taught because
you cannot study it.
You could maybe study Java or you could study graphic design, which included something called
web design.
But that was, you kind of did a website the same way that you did a flyer or a brochure
or whatever.
That's the notion of, you know, like, I mean, like CSS wasn't really even a thing when I
studied.
So yeah.
But I think like over time and, you know, so I've been involved, I've increasingly been
moving into kind of spaces.
I think you reach a point where you almost get tired of building things yourself and
you're more interested in seeing what other people build and what they are doing.
So I'm spending more time actually working with others in terms of helping them figure
out how to build the things they want to build.
And also like people that are looking for like mentorship or whatever, or who are trying
to kind of upskill or kind of learn these skills and so forth.
And so as part of that, I was, I was very involved at one for one year, maybe it was
kind of just when COVID hit, was it, I think 2020.
I was very involved in a project called Codex, which is based in Harrington Street in Cape
Town.
And yeah, so it's run by, by a guy called Andre and, and, and Cara, who's like they,
the two of them run it and like, sure, they, they just like inspirational people.
I would, I think like, I would highly recommend you just speak to them as well on the podcast.
And so the goal there was to take people who didn't necessarily have the same opportunities
that I or any of the people at Codex had, but are interested in like kind of figuring
out if they can create a career in, in the tech world.
So effectively, you know, these would be people from like kind of the bottom of the LSM scale,
you know?
Like a lot of these people didn't even have internet at home.
And like, and I think there's a really good, like, like a interesting intersection there
where, you know, like there's a massive demand for tech skills.
I think if you even look at just like recruiters and even a business model like AlphaZen, like
that, that wouldn't work in any other industry just because there's such a big demand.
And then like in South Africa, we have this massive problem of unemployment.
So I think a lot of people are asking questions around, can you maybe use tech to like this
specific, this massive demand for tech skills to maybe make a bit of a dent in that massive,
I think we're like, like youth unemployment, I think we're above 50%.
You know?
So yeah, so I think, like, so I think that like kind of, so I joined the Codex team with
that in mind.
And, you know, and so we kind of definitely, so I took a group of girls and we got a lot
of funding from the Google Foundation and kind of I taught them a lot of skills that
like related to kind of building web apps and stuff, kind of doing a lot of work with
web components, doing a lot of work with React.
I think a lot of them are employed today as React developers.
But I think I also like, it was also a very big learning experience for me because there's
a lot of things that I took for granted in terms of if I say, you know, I'm self-taught,
there's a lot of privilege that I had in my life that made that journey very easy for
me.
It's just basic things in terms of like having a degree, although it's not a degree in tech,
but like being able to have gone and studied at the university, like definitely like it
teaches you some really great like abstract thinking skills.
And I often find that with these type of programs, it's very easy to teach someone like HTML,
you know, you do this and this is how you make the thing blue, JavaScript, you do this
and when you click the button, this happens.
But I think once you get into the kind of the more complex stuff, you know, like in
terms of things like encapsulation, you know, like APIs and architecture and those type
of things, it's like there's a level of abstract thinking that I have had the privilege of
being taught in for a very long time in my life, starting, you know, from like having
the opportunity to go to a pretty decent high school, you know, by general standards, you
know, it's not a public school, but like in terms of just the general South African socioeconomic
circumstances, like sure, it's definitely within like kind of when you're talking about
like the average, I had a phenomenal education.
And I think so like that is how like if I were to contextualize the points that you
mentioned around what I said when I joined Open Up is like I think that has been kind
of where my journey has been going post Open Up.
I think at Open Up I very much looked at it through the lens of how can we use tech to
make things better for people that don't necessarily have the same privilege that I have.
And I think increasingly now I'm kind of exploring more avenues in terms of like how can I maybe
use like what I've been able to learn over the years and maybe help other people kind
of learn those skills maybe was less of the pain that I had to in terms of just like not
knowing anything about like even agile processes or anything, you know, missing deadlines,
having to work through the night because I couldn't estimate like properly or just like
completely just like missing like how to even architect projects or whatever.
And I think so currently as I'm speaking at this point I'm kind of at a place called Codespace.
It was originally created by Emma Dix, which she founded Code for Cape Town, which specifically
looked at empowering, so they started out with kind of a program in Kailicha, which
is one of the informal settlements in Cape Town.
And they kind of also like specifically with a focus on some of the girls, they're kind
of teaching them like, you know, basic tech skills and tech literacies and so forth.
And that kind of evolved into teaching them programming and so forth.
And now they're actually running a full like remote program, which is based on kind of
like an income share agreement.
So anyone can apply.
You don't pay anything to say it's a one year software engineering program that I'm currently
running for them.
So anyone can apply.
And she's just like you go through an application process because obviously you want to weed
out people that aren't really that interested, but they just don't know what else to do.
And effectively, you get an entire year's worth of training in everything from, you
know, like HML, CSS to like full on like JavaScript, you know, like full stack JavaScript from,
you know, all the major frameworks to like Node, like even like AWS, like cloud functions,
all of that stuff.
So really like almost a kind of a full on like JavaScript engineering program with like
HML and CSS.
And yeah, effectively you don't pay.
And then if you do get a job after you've studied, then you retroactively pay a portion
of kind of what you would have paid as fees as a part of the percentage of your salary.
So I think that's a really great model and it's one of the reasons why I've come a lot
involved with them apart from just like really enjoying working with the team.
I definitely think specifically in a time now where there are just like around every
corner there's like a boot camp trying to cash in on this, trying to cash in on this,
you know, everyone wanting to get into development and so forth.
So I think having a model like that is really great and I think it keeps everyone accountable
because at the end of the day, I'm not getting paid if my students aren't placed because
I effectively get paid a percentage of their salary.
So yeah, like I think like that is kind of, if I were to connect that statement with where
I'm currently in in my life, I think that is kind of the area that's most applicable.
Yeah, that's great.
I know there's a school in school or a movement in the US that has a similar approach to how
you pay.
I always blank on their name for some reason, but I'll remember and put a link in the show
notes to that.
Is it the one that specifically works with refugees and...
No, no, not specifically, no, no, because like I always blank on that one's name as
well.
I have an actual, I have a friend Douglas who's actually doing work for them.
But yeah, like it's, there's amazing stuff going on.
I think back in the days when I was very involved with CodeBridge, we also had like a couple
of people down from a UK based kind of, I also wouldn't say bootcamp, maybe like incubator
maybe called Coders and Founders, where they also kind of do the same type of thing, but
with the goal of not necessarily.
So I think with the code space stuff, we're specifically trying to get people into tech
careers, whereas with Coders and Founders, and I think a similar equivalent in South
Africa would be WeThinkCode, for whom I've also done a bit of work, where they maybe
like they see the tech skills as a way for you to kind of create your own startup.
And so you're not specifically looking to get hired in the tech field, you're actually
learning tech skills with the goal of creating your own business.
Yeah, there's a lot of, there's a lot of super exciting stuff going on there.
And I honestly, I have to, I have to kind of exercise a bit of respect because like,
you know, I just like, I just find it so inspiring, so exciting that, like, if I don't, like,
I'm just going to get involved in everything and burn myself out.
And like, and you probably know, like, also, like the, just the kind of, like, when you
have to compare that to actual salaries of working in tech, you also kind of take a bit
of it, which to me isn't that big of a deal, but now that I have a daughter, it's maybe
not that easy, easy anymore for me to just say, no, it's all right, like I can live on
passion alone.
Yeah, yeah, very true, very true.
Yeah, that does change the game, but yeah, there's a lot of people who make it work,
nonetheless.
I'm exactly in the same boat, I mean, the reason I started the Mycelium Network is not
necessarily to benefit me directly, it's literally I want to share my knowledge and connect people
who want to get into code for whatever reason they have with people who can help them.
Because again, I was also privileged, of course, in my opportunities, but some of the things
I did, I made kind of a bold move, I mean, before I started when I started contracting
at Mozilla, I had a full-time paying job working for a contracting agency, and I was placed
at Vodacom, and I was earning a decent salary and getting medical aid and all that stuff.
But I wasn't happy doing the work, the work to me was meaningless, so that it was literally,
I couldn't care less about what I was building.
And I always had this thing with Mozilla and their manifesto and stuff like that, and being
built in open source, those things connected very well for me.
And at some point I decided, you know what, if I don't kind of just take the plunge, I'm
probably never going to do it.
And I actually resigned before actually having the job at Mozilla, and I had a family at
that point.
So it was scary, it worked out, so looking back at how I'm like, wow, I took a massive
chance there, but it all worked out in the end.
But I want to create those opportunities for other people to also take a leap sometimes,
a leap of faith, and not be scared to fail.
Because in the world we live in today, there's so many mantras about failing, but then when
it comes to social media, you dare not show your failures until you are very successful,
and then you can speak about your failures.
But while you're still climbing the ladder and some of the rungs break under you, don't
tell anybody about that, keep it quiet.
And I think that should be normalized.
Doesn't matter where you are in your career or your path or whatever you want to call
it, it's always okay to fail, and it's always okay to get up and try again.
It's also okay to try a thing and find it's not for you and move on to something else.
The tech industry isn't for everybody.
It's also been sold to people in different ways, and sometimes falsities are being sold
to people.
There's almost Utopia is sold, which isn't always the case.
Even sometimes if you do stuff that you're passionate about, sometimes there's just stuff
that's just work, and you just kind of have to grind your teeth and just get through it.
No, a hundred percent.
I have the same thing with the front-end development South Africa stuff at the moment, where effectively
it's a nonprofit that I and a very good friend of mine, Justin Slack, kind of founded specifically
for kind of just advocating for front-end development and creating resources and connecting
practitioners in South Africa within the world of front-end development.
I almost want to say it's kind of been too successful in so far that now we need to do
a lot of stuff that actual real nonprofits need to do, like auditing and actually doing
operations, keeping track of where money is going, actually getting funding, bringing
contractors on board and so forth.
I always kind of miss the days when it was just me and him kind of just like cowboying
it, and that's exactly the same.
Obviously the part that I doing the finances is definitely I'm doing the taxes and whatever
and auditing is obviously the part I enjoy the least, but at the end of the day in terms
of just value, that is I guess where I can provide the most value.
I think there's also a part of I think sometimes a lot of specifically in the open source world,
I think a lot of it is sometimes romanticized a bit.
And yeah, like let me just put it this way, so you spoke about Zetatech and I might regret
mentioning this, but I guess it's so thematically relevant at the moment.
So last week, maybe two weeks ago, some of the admins on there actually got a personally
addressed letter from someone's lawyers threatening civil litigation because we banned them from
Zetatech.
Wow.
Yeah.
So I think that is kind of the type of stuff you sometimes need to deal with, especially
like within the world of open source as well, with CodeBridge as well, a lot of the time
it's just actually managing humans and personalities that don't get along and whatever.
I think there's an inherent messiness to being involved in these type of things.
I think the fact that I can't even really say what CodeBridge actually was definitively
there's a messiness to that.
And I think specifically us in the tech world who are so used to clean code and debugging
things and efficiency, sometimes that messiness is quite hard for us to stomach because we
want to understand, we want to know what it is, we want answers.
And sometimes that messiness gives us kind of the same feeling that, for example, something
like spaghetti code might give us.
But in real life, you kind of need that messiness.
You can't have everything just clean and perfectly laid out.
That is very true.
I was just having a look here.
I'm reading this book about program management of open source projects.
And there's this quote that I think is kind of relevant to what you just said.
They say as a program manager, you coordinate the efforts of the contributor community to
meet the project's goals.
The title Chief Cat Herding Officer is a joke, but an apt one.
You're working with a group of largely of entirely composed volunteers to produce software
that other people will want to use.
Individually, contributors have their own interests and goals.
When you're a successful program manager, you get these individuals aligned in the same
general direction to meet overall goals of the community.
That was so well put to me.
I'm reading a really great book at the moment.
It's been recommended to me quite a bit, and I finally got down to reading it.
I don't know if you're familiar with it.
It's called The Goal.
No, I haven't read it.
So it's kind of very widely shared within the agile community.
It's actually a novel, but it's a novel about a factory manager and the factory on the verge
of getting shut down and then them trying to figure out how to save the factory and
so forth.
As part of that, they kind of like, yeah, obviously, I don't want to obviously lay out
the entire plot of the book, but as part of that, they come to some insights around just
the nature of projects and things like dependencies and estimations and so forth.
But I think the fact that having it packaged as a novel to me is such a great way of communicating
that because obviously, there's a lot of great books on these type of things, like Lean Startup
and all of those books.
But I think now for me, as I'm reading this book and looking at it through the lens of
a novel of someone who's...
It's also like kind of his marriage is falling apart and whatever.
So kind of seeing the processes and all these things around how do you actually develop
in your career?
How do you actually manage a team?
How do you do all these things?
I think sometimes we forget all of that happens as a microcosm in this larger thing that is
just our lives in general and everyone else's lives.
So in that, you're dealing with personal things and you're having issues with family and you're
getting burnt out.
For me, I'm very open about my own struggles.
I have a pretty long history with mental illness as well.
So I'm pretty open and I wish I could talk about that more.
But sometimes when I try to kind of always be open about it, but sometimes I feel that
sometimes people feel sometimes it's a bit shoehorned into conversations.
And I think I was maybe overcorrecting a bit in terms of people not talking about it.
But that's tough for me, but that's almost like an entire podcast episode on itself.
I have a blog on Medium where I openly write about my struggles with substance abuse because
of mental health problems, anxiety, stuff like this.
So I very much understand all of this.
And the thing that I realized at some point is why do I want to compartmentalize my life
into these buckets?
Why do I feel the need to have that writing as open and honest as it is, be separate from
that stuff I write about tech?
It's almost as if I'm saying that it should be normalized and people shouldn't be afraid
to talk about these things.
But then I compartmentalize and I kind of, don't look there, that's personal.
And so it's super uncomfortable, but I am making a concerted effort to not do that.
Maybe I will have the blog separate on Medium because the audience that will benefit from
that is there, so it makes sense, but I won't hide from linking to it or talking about it
or mentioning it in a thing, which previously I would probably avoid.
Like I, for example, would have like a coffee thing and then I would have one that's like
for my personal and then one for my, oh, this is my professional.
And I realized that the reason I'm doing that is because of this whole thing that social
media is driving you towards.
It's saying no, when you're in the public eye, like whatever that is, five people looking
at you or 5,000, doesn't matter, your human nature kicks in in the same way.
You have to put your best foot forward.
And admitting that you have struggles is not that.
It's like I just said about the failure thing.
You can talk about failure once you've succeeded, but once you haven't succeeded, I'm putting
it in quotes, you're not allowed to talk about your failures because then you just look weak.
And that's nonsense.
I mean, show me a person whose life has gone just peach perfect, like from day one up to
the day they are now.
We all have struggles.
And I think the more we talk about that, the better.
And I think people will be more okay with also understanding.
I found that personally, if you're open about these things, people are more willing to like,
you know, come meet you in the middle, so to speak.
They're more understanding if you're open about it.
And of course, you're going to find people who are not like that.
But I think for the most part, you're going to be surprised by people's reaction when
you're actually honest.
Yeah, and I think about that quite a lot.
And sometimes I wonder whether I'd be as open about these things if once again, you know,
like I guess, so I explicitly on my LinkedIn profile, you know, so I think I have a front
end development, product design, teaching, and destigmatizing mental illness.
And I sometimes wonder if I would be this open about it if, you know, if, you know,
I wasn't, what would be the word, if the tech industry wasn't so, didn't have as many opportunities.
Like I'm struggling to kind of figure out how to phrase it now.
I know what you're trying to say though, yeah.
Yeah.
So if it was a bit more of a competitive like kind of industry, and you know, there was
a shortage of work or whatever, specifically within the tech world, like anyone, like if
you are slightly above intermediate level, you are very in demand.
So I think sometimes I wonder whether I would have like been as open about it if I knew
that, you know, I was struggling to get work and, you know, like there was very few positions
out there and anything that can be used against you, like would be used against you.
Yeah.
Yeah.
But like, I don't know, like maybe let's see in 10 years, things might change.
I might be like, that was a really big mistake.
Like I shouldn't have been as public about it.
But I think for now, like I've been, I've been managing somewhat well, I've been managing
very well while at the same time being open about kind of like all my personal struggles
and so forth.
Yeah.
And I actually did a very interesting like talk.
So I was asked by some of the, so some of the folks at Deriel.
So they sometimes have speakers come and chat to the team.
And I, so I think they, at some point we're looking for someone to chat about mental health.
And I've been promising myself that I would do an actual real talk on it at some point,
and not just like mention it as an aside.
So I kind of just volunteer to do it.
And I think specifically, like I actually spent a lot of time talking and reflecting
on how much I've actually learned about kind of being human just from like getting deeper
into the world of product design.
And I think I really resonate with what you're saying about, you know, failure and so forth.
But I think it's even more, it's actually not necessarily even failure, but I think
it's being able to understand things and like being able to articulate that failure.
I think when you're in the, like, and I think within the world of product design as well,
you know, there's often a saying that it's not necessarily that you're scared that someone
isn't going to be receptive to your idea.
You're scared that you're not going to do your idea justice if you share it too early.
So if you push that MVP out too early, maybe you're like, okay, cool, we should have actually
just done this and it wouldn't have failed.
So like it's more a thing about like missed opportunity or not being able to express the
actual value of something early on.
And I find it to be the same as well with kind of discussions around failure and just
general experience and so forth.
And I think it ties into what you said that, you know, if you can reflect back and you
can very nicely articulate and make sense of what was going on, you know, and frame
it in terms of a bigger journey, that's a lot easier to do than when you're in the thick
of it and it's confusing and it's messy and you don't know what's going on.
You don't even know if it's a failure, but you're just, you don't, it's this blob and
you don't know how to make sense of it.
I think that's when it's hard and being vulnerable at that moment, I think is very hard.
But I think like I've kind of learned a lot from the world of product design specifically
in that regards, because there's a lot of similarities there in terms of actually pushing
a product out and not actually even really knowing what it is or what value it provides
and wanting to hold back all the time and be like, okay, let's just refine it a little
bit more.
It needs a bit more polish.
And like, I think even if you think about things like extreme programming and so forth,
you know, so one of the core principles of extreme programming is which, you know, Agile
kind of grew out of the world of extreme programming and so forth is courage.
So and yeah, so I think there's a lot within this field and I think it's almost like the
tech field is almost, I think, pushing humans to like, I guess, the edge of what they're
comfortable dealing with complexity wise.
And because of that, it's actually bringing up a lot of stuff in you in terms of uncertainty
and, you know, like people talk a lot about imposter syndrome.
Yes, and but like, specifically, it's a big thing in the tech industry.
But like, I think sometimes we don't ask like, why is it so big in the tech world?
Why isn't many people talk about imposter syndrome amongst plumbers or farmers or, you
know, nurses?
And I think it's just because, like, what we are required to do in the world of tech
is so kind of straining in terms of emotionally for us and like, our capabilities and yeah,
like I often joke and I say that, you know, as you get more senior kind of the imposter
syndrome kind of starts going away, but and it's not because you get better, but you just
realize like how like bad everything else is out there, that you kind of realize, yeah,
you know, I didn't know much and whatever.
But no one else knows anything.
Exactly.
Yeah.
So it's like, I mean, look at look at look at kind of that incident with WhatsApp and
Facebook with the DNS, like, like, I'll always remember the date, because it's the date my
daughter was born.
So and so, like everyone was like, so we couldn't send anyone any WhatsApp messages or anything
or any photos or whatever, because WhatsApp was down.
Yeah, what a day for WhatsApp to go down.
Yeah, exactly.
Yeah, exactly.
So but like, I think like that just kind of shows you as well, you know, like it's like,
I think like, at some point, you just realize just like how, like, with prayers and sticky
tape, and, you know, just how, how kind of just held together ad hoc most of these things
are and how people are just kind of just getting by in terms of what they actually understand
and what they can actually do.
And how the complexity of the things we're building far out seed actually our abilities
to manage it.
And I think that kind of that kind of makes the some of the imposter syndrome kind of
fizzle away.
You just realize everyone else really sucks at this as well.
Yeah.
Yeah.
No, that's very true.
And I think people also oftentimes underestimate how understanding your users can be.
You know, if something doesn't quite work, they'll find a way around it or they'll they'll
try again.
There's very few instances with your everyday like website or application where somebody
is going to make a huge fuss about the fact that the button didn't quite react in the
way it was.
Or when I resize my browser window, there was this moment where two things were misaligned.
Like we sweat all that small stuff, but in the real world, honestly, like, first of all,
you run into it all the time because it's humans making these things and we're all fallible.
And the second point, that is not the end of the world.
It's like make your window a little bigger and then it's aligned again if it bothers
you.
Yeah.
It's okay.
No, a hundred percent.
I, both you and I will probably get a lot of hate mail for actually saying this.
But I, I wish it wasn't the case.
Honestly, I wish it wasn't the case.
I wish like, like people would be more outraged at bad experiences on the web.
Cause I think like then if it hurts companies, they would actually put more resources into
it.
And I always tell my students as well, you know, like specifically my design students
that I wish it wasn't the case.
I wish I could tell you that, you know, you need to treat your users with respect.
You know, like it's a very brittle relationship.
If you break their trust, you know, like that's very important.
Like, and I believe all those things.
I wish I could say like that translates also into actually successful business.
But like what I've unfortunately learned over the years is that like, yeah, like I've, I've
just been part of like projects and stuff where things were just like broken and, um,
you know, and somehow like, so people complained on Twitter and they kind of wrote a lot of
angry stuff.
And a year later, like things were just back to the way they were.
Once those issues were resolved, um, you know, like how many times has Woolworths been boycotted
now?
Like how many of those people that boycotted with some company like Woolworths over the
years are now back at Woolworths again.
I wish it wasn't the case, but, um, but at the very least, if anything, it also like
kind of just like eases a bit of the pressure of having to have everything be perfect.
Um, like I think sometimes in terms of companies, it may be like makes for some gross incentives,
but I think as individuals working in this space, um, it's also not the end of the world
if things break.
Yeah.
Yeah, no, for sure.
And I mean, I'm not advocating for doing sloppy work.
It's more a case of, um, doing something right takes time.
And, um, when business interests clash with time, oftentimes, you know, you literally
just don't have the time to do it the way you would like to do it.
And so sometimes you need to make trade-offs.
Um, and that is where I'm talking about, like where the forgiving nature of people will
come in and like, kind of save you from, from those situations.
Cause I mean, if, if we all had product managers or product owners who weren't driven by OKRs
and deadlines and stuff like that, we would build software that is much more resilient.
And, um, you know, it's done better, but sometimes time constraints forces you to, to take shortcuts
unfortunately.
Yeah.
And to me, honestly, I, this is such a hard thing for me and, you know, I'm, I'm kind
of even scared to talk about it because, uh, like I know how a lot of people are going
to react, but, you know, uh, I can just honestly speak about kind of how things look from where
I'm standing.
And I think like I'm someone who's very passionate about accessibility.
I've, I've done several talks on accessibility.
We actually at Frontend Development every year on Global Accessibility Awareness Day,
we do a specific event.
This year we had a phenomenal one, uh, where, um, Brett, um, someone I met at DevConf who's
a, who's a blind front end developer actually did a talk and actually showed how he codes
as a blind developer.
Um, so, but yeah, like I, a lot of, like I'm struggling to find some type of incentive
for companies to really care about accessibility apart from just making them feel bad for not
doing it.
Uh, I think a lot of people would argue that there are, you know, like financial, you can
frame it financially and, and whatever.
And honestly, I think a lot of like business thinking around like business and so forth,
you know, the whole 80-20 rule, you know, 20% of your users account for like 80% of
your kind of value.
Um, you know, like that flies in the face of catering to a smaller percentage, um, that
had like that really require more accessibility.
And I think there's also like, we sometimes get a bit stuck on, um, yeah, I'm just so
scared that I'm just going to say something that I'm going to regret, not necessarily
that I'm withholding anything, but accessibility is such a, such a touchy subject and I'm scared
I'm going to say something that can be misconstrued or come across like in a way that I don't
intend that.
But yeah, it is, it is, it is tough, man.
Like I, you know, like I often find anytime I'm involved in a project where we actually
care about accessibility, it's just because I'm forcing it, it's because I'm in a position
of power and I'm saying that, you know, we're going to do this as a team.
You don't have a choice, otherwise I'm not going to manage this project.
Um, yeah, it's, it's, it's tough and yeah, like that's, that's also, that's a podcast
on its own.
No, for sure.
No, and I mean, it, it, it boils down to the fact that you have to get people to truly
care.
Um, and that is, I don't, it's better, let me, let me be totally honest.
Like, I mean, uh, the tooling around it has improved leaps and bounds and the number of
people that talk about it as growing exponentially, which I love.
But in the end of the day, what's the important thing is, is that people who are not evangelists
care about this.
Like you understand, and I think one of the new ways that it's being framed that I like
is this whole idea of oftentimes when you do something to benefit somebody with, um,
some ability challenges, benefits all your users in the end of the day.
And I think the more we can pull examples out of the real world to demonstrate that,
the more it becomes less of a, I'm doing it for a small percentage of my audience to a,
I'm doing a thing that's going to benefit a small percentage of our audience.
But a turns out it's also going to benefit all the other people as well.
Um, and I think there's more and more of those examples being, uh, highlighted and that,
that changes the conversation because I know for the longest time, the way to talk about
it was, well, you know, you can get sued.
Have you heard about Target?
And I don't know if fear-mongering is the way to get people to care about something.
I would, I would say, like, I would like, you know, I'd actually say I hold the opposite
position.
Like for me, the only, to me, the only, the only real way we're going to get any sort
of traction on this is if there is like financial realities of punishment, uh, for companies.
Because you know, like, like, yeah, I do, I do hear what you're saying.
Um, but like, if I just like look at like how, what a tight ship a lot of companies
are running, you know, um, even just sometimes making it a good experience for the average
user, you know, like the, the completely able-bodied user, like sometimes there's not even enough
like time to actually do that because other features need to be shipped.
And I also have to say, you know, like we can head on companies as much as we want,
but there is a big shortage of developers.
So that usually means that any team won't ever be able to get to all the work that needs
to be done.
So like most teams have positions that have just been open for years and they haven't
folded and they're just short staffed.
Um, so I do think there is a bit of a kind of like, you know, like companies just like,
like having bad incentives, but I also think a lot of it is just like skills, you know,
like, uh, yeah, like, and I think, you know, just in terms of like, and I think specific
in South Africa, I have a theory where, um, in South Africa specifically, I think, I think
we're trying to, to, to combat a lot of that with FATSA is that, and I'm as guilty of this
as well.
I do a lot of international work, um, because, you know, South African companies can't really
compete with the exchange rate, you know, I get paid in pounds and dollars, like, you
know, South African tech company can't really compete.
Um, and so that by nature means once people reach a certain level of seniority, they immediately
start working with like, you know, international teams, um, which is great, but at the end
of the day, what then happens is like the actual, like the actual skills in the actual
pool of people that are working on South African products, um, is, you know, greatly diminished.
Um, and you, you don't have those opportunities for mentorship in South African teams and
so forth, which I'm of the opinion that the South African, you know, like just experience
of using South African products on the web and so forth is, is not at the standard that
it should be.
Like, I think we are South Africans just assume because, you know, it's take a lot or because
it's show max or whatever, we can't hold show max to the same standards as Netflix.
We can't have all take a lot to the same standard as Amazon or whatever, you know?
Um, and like, I, I do think unfortunately it's, it's like, it's a bit self perpetuating
and um, yeah, I would wish if, if, if South Africans were more demanding of kind of the,
the, the experience that they get from actual tech products in South Africa.
Yeah.
Um, do you think, um, this is a general thing in developing countries where, um, essentially
when you reach, when developers reach this level of seniority, you have this, like they
say brain drain.
And so automatically kind of have this knock on effect happening.
And then, yeah, some people are going to get left behind in that, that story, right?
They're never going to, they're never going to reach that seniority because the people
that can help them get their leave.
Yeah.
And, and, you know, and it's interesting.
So, um, like I've actually, actually, actually spoken to Phillip from Office Zen, uh, one
of the co-founders of Office Zen about this quite a lot, because what they're seeing is
they're seeing a lot of, and not only South Africans actually, you know, working for European
companies and so forth post COVID, you know, like, like as the whole world went more remote.
Um, they're also seeing a lot of actual developers from other countries come and work in South
Africa, just because it's a, it's a nice climate.
The cost of living is, you know, like pretty inexpensive and so forth.
And they work with their kind of teams in Silicon Valley or whatever, but they're based
in Cape Town.
And so, like, I think what I, where I stand on that, and when I, some, what I've made
into Phillip as well is that I think there's a danger there in not seeing that as a brain
drain just because people are still physically here.
And what happens is, you know, once again, the actual teams in South Africa, the juniors
in South Africa and, you know, those like working adjacent to developers, uh, you know,
maybe in product design or in tech support or whatever, like they are getting deprived
of a lot of like seniority and opportunities for mentoring and, you know, and so forth.
Yeah.
Um, it's tricky.
It's tricky.
I don't know, but once again, I'm as guilty of this as anyone else.
Um, I have to also say that, you know, unfortunately also, I find that, you know, South African
tech companies don't treat the employees that well, unfortunately.
And that's been my experience as well.
I think specifically as a front end developer, I often feel that South African companies
tend to see front end development as an afterthought.
So like, yeah, it's not a real job.
Yeah, and it's like, you get the designs from the designer and you get the API or not, not
even the API, let's say you're doing PHP templating or whatever, you know, you just write the,
make the CSS fit the design.
Like there's no mention of like design systems or any of that stuff, you know?
Um, so like, so now like you're given, you're given the opportunity to, um, be less respected
and earn less money just out of principle, you know?
So I think at some, at some point, yeah.
So at some point, like even I'm like, you know, so I try and, so there's a company called
Palmetrix that I, um, do like a big, about 50% of my work, um, is for them.
Um, so they're kind of like a seller dashboard for, um, sellers, third party sellers on take
a lot.
Um, yeah.
Um, so, um, yeah, so that is the big, one of the big South African teams that I work
with.
And it's just because also I share a lot of the, um, like there's a lot of overlap in
terms of just like culture and whatever.
So I really enjoy working with the team there.
Um, but like most of my other works international, unfortunately.
So as a teacher, cause I know that's a large part of, of what you do, what do you see the
role of open source?
How does, what role does it play in learning and in teaching?
Hmm.
Sure.
Um, yes.
Okay.
That, that should, that's a tough one.
Um, I can say for one that it isn't playing nearly as big as a role as it should.
Um, I, I still see so many teams that are effectively trying to create their own worst
version of MDN.
I've just encountered so many, like, cause I've seen, I've taught that a lot of places
I've kind of been involved in a lot of programs and so forth and there's an obsession with
creating content and I think in terms of education, we are still like, we're kind of in almost
like we're kind of like, so there's a really great book, um, by the name of info.
We trust.
Um, and it talks about, you know, like we, like the information age isn't like on the
horizon anymore.
We're like, we're like in the shoulder, shoulder depth in it.
We're like drowning in information and you know, like, like, and I think indicative of
that is just like the fact that, you know, most of the big tech companies and then the
most profitable to companies is companies that actually help navigate that just sea
of information, whether it be Google or Facebook or Twitter or whatever, or even Wikipedia.
So but I do think a lot of educational programs and a lot of people involved in those programs
are still in a mind, like, like in a, in a, in a information scarcity mindset where they
think the value that they're providing is giving students content, give like creating
reading material, creating instructional videos and things for you for, for, and I think one
thing that we've started exploring at code space is, um, I'm obviously going to speak
a lot about code space because, because that is like where I spend most of my teaching
time at the moment.
We've started exploring, not creating any new content.
So playing the role of curating content.
So sending people to MDN, giving them a list of YouTube videos to watch and so forth.
And thinking about the value we provide a bit differently.
Um, I think I draw a lot of inspiration from, um, the Odin project.
You're probably familiar with Odin project.
Yes.
Yeah.
So they also tend to take a more of a curation role than an actual creating content role.
Yeah.
Yeah, like does the world really need one more YouTube video on Flexbox?
Um, probably not and probably not with the budget that I have, you know, like I'll just
leave it to actual like high producing streamers to do like a really engaging video on how
Flexbox works.
So what is the value that I provide then?
And I always start, I always start by asking my students, why are you here instead of just
doing a 200 rand Udemy course?
Um, and like they never even actually think about that, but even worse, like why are you
here when you could just be doing free code camp, um, which most of the time has even
better outcomes than a lot of these boot camps.
So I think what we've been trying to do is integrate a lot more of those things.
So instead, like actually having students do free code camp in addition to what we provide.
So instead of seeing something like free code camp or Udemy or whatever, as a competitor
to the training that we provide, seeing how we can maybe play a more curation role in
terms of guiding people in terms of, okay, if I want to go into this, what are things
worth exploring?
If I want to build this type of app, what are the stuff I should be looking at?
What are the, cause there's also a lot of like misinformation out there.
Um, like what are the things, you know, should I be using MDN or should I be using W3 schools?
You know, um, most I've, I'm sure I've seen so many programs where they actually use W3
schools as actual reference.
I'm like, yeah.
Okay, I shouldn't probably have said that part out loud, but yeah, like it's pretty
well known that I'm not a big fan of W3 schools.
Um, but yeah, like, so I think to answer your question, what role should open source be
playing?
Sure.
I don't know a role at this point.
I don't, I don't think it's playing that much of a role at the moment.
Um, we, we just have too many people creating content, too many people building LMSs.
Um, when something like GitHub actually has a really solid, like educational platform
that you can use, yeah.
And you can set it up so it runs automated tests and whatever.
Do we really need to be building another Laravel powered like LMS for our specific bootcamp
or our specific?
Yeah.
I think like there's a bit of a mindset change that needs to happen there in terms of relying
more on open source things, relying more on what's out there.
And I think there's a bit of fear there in so far that people are scared that that's
going to make them redundant.
Um, yeah, but I, but I, but I also think, you know, I don't know, there's maybe easy
for me to say, but if it makes you redundant, then so be it, you know, um, like would you
rather, would you rather try and stay relevant at the expense of students at the expense
of their, so I told my wife yesterday, sorry, like I just have so many things I can say
on this topic.
I told my wife yesterday.
So like at code space, we for next year, we have an intake of 150 students.
And like, shoo, like that's the biggest intake we've had ever.
And yeah, like, and it's, it's so scary.
It's shoo.
It's like, you literally have the ability to mess up 150 people's possible career prospects.
Yeah.
That is scary.
So like, but yeah, like that, that's a conversation for another day.
Um, but yeah, it's, it's, I just find that, I just find that there's a lot of misidentification
of the real value that education provides in the information age.
Um, I think a lot of, especially a lot of like boot camps and stuff, try and copy what
universities are doing.
Because I think it, they're under the impression they, it's more legit.
Universities are quote unquote better than just like some random, but I don't know.
Like as someone who's done a lot of work for universities, like, shoo, like, like the,
the university model is not what you want to be copying and saying this as someone who
has a, has a master's degree himself and spent seven years studying, um, like I honestly
think like the university model is very flawed in this day and age.
Um, and I think we need to do some fundamental rethinking in terms of how we train people.
Um, a good friend of mine, um, Candice, um, she works for a company called fourth rev,
so fourth industrial revolution, uh, revolution.
And so they are exploring a lot of these things in terms of how do you do education in a world
like the one we're in today.
And honestly, I don't, I don't necessarily have any good suggestions.
I think I can maybe just say like, there's a lot of stuff we're doing really badly.
Um, and we should maybe just address them before we actually see how we can improve.
Um, just give a, give an average experience like, uh, before we even aim for great.
Um, yeah, I'd be here like, like I'd be curious, just, you know, like most people that I speak
to that have some type of training in coding or whatever, like is pretty dissatisfied with
kind of their bootcamp experience.
Yeah.
Um, and a lot of them, like this in spite of kind of like the course that they did or
the degree that they got or whatever, um, actually succeed.
Um, yeah, so I don't know, like it kind of feels like we don't necessarily have to win
at this game.
Like at this point, we just need to stop scoring like own goals at the very least at the very
least, just like stop sabotaging ourselves.
Let's just like at least stop the, stop the bad stuff and then we can focus on making
it better.
Yeah, no, I totally agree.
And I think that the duration thing you were talking about, I think that is the missing
link at the moment.
Everybody that I speak to that's, that's new and starting to learn, it's not like that
there isn't content out there.
There's actually too much, um, and so finding, finding a past through all of that is what
they find much, much more, um, challenging than finding content.
They don't know what to trust.
They don't know if this person is, is good or not.
There's different modalities, different ways people learn.
And so I think being at the curation space and doing a really good job at that is I think
much more important right now than just, like you said, creating another version of MDN
or free code camp or whatever the case may be.
Yeah.
But I mean, that's effectively what you're doing here.
So instead of doing like, welcome to the Sculpt Nietling stream.
And I'm going to be teaching you about what you need to know as a developer.
You're kind of relying on what people are doing out there and what's, what people already
explored and surfacing that, uh, instead of trying to create stuff.
Yeah.
Like, so at the very least you have that going for you.
That's good too.
Yeah.
That's good.
Cause that was the intent.
From one Sculpt to another.
Yeah.
So this was really great.
I think this is a wonderful conversation that is like far reaching and it delved into all
kinds of things, which I think is really, really interesting and people are going to
enjoy listening to it.
And so in closing, um, Tim Ferriss has this thing at the end of his show that he always
asks people, if you, if you had a billboard and they're really, really busy street and
you could put a phrase on there for everybody to see, what would that be?
So my question is similar in nature, but then the message would be, what would that message
be for people that getting into tech?
Okay.
Like that would very much depend on what time of day you ask me, uh, or even like what day
of the week you ask me.
So I would probably just default to like whatever I tell my students the most.
And I think what I always come back to is that it doesn't need to suck this much.
Like I think a lot of them have an expectation that, you know, they're going to have to work
through the night.
They're going to have to like, uh, put in all these hours.
They're going to have to, like, people are going to have to treat them like crap.
Um, and like, honestly, I, like, I always tell my students, there are teams out there.
There are people out there that are like, I don't want any part of that.
Like if you come and work for us, if you're part of our team, we don't want that.
We're going to, we're going to like actively push you to take care of yourself.
And I find that, you know, with my students, a lot of times there's an expectation that
they need to almost like bow down to this hustle culture and they can't be like, I actually
want to take care of myself.
I actually want to be in a, in a healthy mental state.
I don't want to sacrifice my mental health and like, yeah.
And to me, it's just like, I always tell them like the tech field is just so wide and there's
just so many people doing so many different things that you don't need to settle for something
that you feel is not aligned with your values.
And I think that is one of the, one of the benefits that we have within the tech field
is just because at the moment there's such a big demand.
So you should be able to find something that resonates with you.
Don't just like, especially if you're a junior, a junior and you're looking for your first
job, don't just settle for the first thing that comes along.
You, like there is a lot of teams that treat people with respect that value you as a human.
And there's a lot of companies that are forced to do this just because they need developers
so badly, even if they would have treated you like garbage.
So I think that's what I always tell my students is that there's a lot more room out there
for you to have a better experience than you maybe think there is.
Yeah.
I think that's great advice.
Thanks a lot, Skol.
This was wonderful.
As I said, thank you for spending your Friday afternoon with me.
Yeah.
It was really great.
Yeah.
Now it's back to changing nappies and the bad stuff.
Back to the real world.
Yeah.
Yeah.
Cool.
Thanks so much.
This was really great.
Yeah.
I hope we can chat again soon.
Oh, for sure.
Cheers.
Cool.
Cheers, man.
Thank you for listening to this episode of the My Senior Network Podcast.
If you're not already, please subscribe, star, and leave a review for us in your podcatcher
of choice.
This helps others find us and helps us make a better podcast for you on this course.
You can also find and follow us on Twitter at networdmycindium and join the community
on Discord.
All the links are available in the show notes.
